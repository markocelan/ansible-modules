---
# Run with: ansible-playbook -i @localhost -e bucket_name=my-test-bucket test_s3_tag.yml
- name: "Test 's3_tag' module"
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    s3_bucket_name: "{{ bucket_name | default('test-bucket-1234567') }}"
  tasks:
  - debug:
      msg: "Bucket {{ s3_bucket_name }} must exist prior this test!"

  - name: List S3 tags
    s3_tag:
      bucket: "{{ s3_bucket_name }}"
      state: list
    register: var_s3_tags
  - name: Check result
    assert:
      that:
        - var_s3_tags is not failed
        - var_s3_tags is not changed
        - var_s3_tags.tags is defined

  - name: Delete all S3 tags
    s3_tag:
      bucket: "{{ s3_bucket_name }}"
      tags: {}
      state: present
    register: var_s3_tags
  - name: Check result
    assert:
      that:
        - var_s3_tags is not failed
        - var_s3_tags.tags is defined and var_s3_tags.tags == None

  - name: Set S3 tags from scratch
    s3_tag:
      bucket: "{{ s3_bucket_name }}"
      tags:
        test_key1: "test_value1"
        test_key2: "test_value2"
        test_key3: "test_value3"
    register: var_s3_tags
  - name: Check result
    assert:
      that:
        - var_s3_tags is not failed
        - var_s3_tags is changed
        - var_s3_tags.tags.test_key1 == 'test_value1'
        - var_s3_tags.tags.test_key2 == 'test_value2'
        - var_s3_tags.tags.test_key3 == 'test_value3'
        - var_s3_tags.tags | count == 3

  - name: Overwrite single S3 tag
    s3_tag:
      bucket: "{{ s3_bucket_name }}"
      tags:
        test_key1: "the_new_test_value1"
      purge_tags: no
    register: var_s3_tags
  - name: Check result
    assert:
      that:
        - var_s3_tags is not failed
        - var_s3_tags is changed
        - var_s3_tags.tags.test_key1 == 'the_new_test_value1'
        - var_s3_tags.tags.test_key2 == 'test_value2'
        - var_s3_tags.tags.test_key3 == 'test_value3'
        - var_s3_tags.tags | count == 3

  - name: Overwrite single S3 tag again
    s3_tag:
      bucket: "{{ s3_bucket_name }}"
      tags:
        test_key1: "the_new_test_value1"
      purge_tags: no
    register: var_s3_tags
  - name: Check result
    assert:
      that:
        - var_s3_tags is not failed
        - var_s3_tags is not changed
        - var_s3_tags.tags.test_key1 == 'the_new_test_value1'
        - var_s3_tags.tags.test_key2 == 'test_value2'
        - var_s3_tags.tags.test_key3 == 'test_value3'
        - var_s3_tags.tags | count == 3


  - name: Delete 'test_key1' S3 tag
    s3_tag:
      bucket: "{{ s3_bucket_name }}"
      tags:
        test_key1: "whatever-REALLY!"
      state: absent
      purge_tags: no
    register: var_s3_tags
  - name: Check result
    assert:
      that:
        - var_s3_tags is not failed
        - var_s3_tags is changed
        - var_s3_tags.tags.test_key2 == 'test_value2'
        - var_s3_tags.tags.test_key3 == 'test_value3'
        - var_s3_tags.tags | count == 2

  - name: Delete 'test_key1' S3 tag again (this time it should be missing)
    s3_tag:
      bucket: "{{ s3_bucket_name }}"
      tags:
        test_key1: "whatever-REALLY!"
      state: absent
      purge_tags: no
    register: var_s3_tags
  - name: Check result
    assert:
      that:
        - var_s3_tags is not failed
        - var_s3_tags is not changed
        - var_s3_tags.tags.test_key2 == 'test_value2'
        - var_s3_tags.tags.test_key3 == 'test_value3'
        - var_s3_tags.tags | count == 2

